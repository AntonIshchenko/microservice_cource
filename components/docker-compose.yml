version: '3.5'
services:

  eureka-server:
    build:
      context: ./eureka-server
    hostname: eureka-server
    command: ["java", "-jar", "/eureka-server-0.0.1-SNAPSHOT.jar"]
    expose:
      - "8761"
    ports:
      - "8761:8761"
    networks:
      microservice-net:
        aliases:
          - eureka-server
          
  metadata:
    container_name: postgres-metadata
    image: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=metadata
      - PGDATA=/data/postgres
    ports:
      - "5455:5432"
    networks:
      microservice-net:
        aliases:
          - metadata
          
  resources:
    container_name: postgres-resources
    image: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=resources
      - PGDATA=/data/postgres
    ports:
      - "5444:5432"
    networks:
      microservice-net:
        aliases:
          - resources
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      microservice-net:
        aliases:
          - zookeeper

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      microservice-net:
        aliases:
          - broker
          
  localstack:
    image: localstack/localstack:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=lambda,s3
    ports:
      - '4566-4583:4566-4583'
    volumes:
      - "${TEMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      microservice-net:
        aliases:
          - localstack
    healthcheck:
      test: curl --fail http://localstack:4566 || exit 1
      interval: 30s
      retries: 3
      start_period: 20s
      timeout: 10s

  config-server:
    build:
      context: ./config-server
    hostname: config-server
    environment: 
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/AntonIshchenko/microservice_cource.git
      - SPRING_CLOUD_CONFIG_SERVER_GIT_SEARCH_PATHS=config/
      - SPRING_CLOUD_CONFIG_SERVER_GIT_FORCE_PULL=true
      - SPRING_CLOUD_CONFIG_SERVER_GIT_CLONE_ON_START=true
    command: ["java", "-jar", "/config-server-0.0.1-SNAPSHOT.jar"]
    expose: 
      - "8090"
    ports:
      - "8090:8090"
    networks:
      microservice-net:
        aliases:
          - config-server
    depends_on:
      - eureka-server
    healthcheck:
      test: curl --fail http://config-server:8090/api-gateway/development || exit 1
      interval: 30s
      retries: 3
      start_period: 20s
      timeout: 10s
      
  api-gateway:
    build:
      context: ./api-gateway
    hostname: api-gateway
    command: ["java", "-jar", "/api-gateway-0.0.1-SNAPSHOT.jar"]
    restart: on-failure
    expose: 
      - "8888"
    ports:
      - "8888:8888"
    networks:
      microservice-net:
        aliases:
          - api-gateway
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_healthy


  song-service:
    build:
      context: ./song_service
    hostname: song_service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://metadata:5432/metadata
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
    command: ["java", "-jar", "/song_service-1.0-SNAPSHOT.jar"]
    ports:
      - "8081:8081"
    networks:
      microservice-net:
        aliases:
          - song_service
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_healthy
    restart: on-failure
    
  resource-service:
    build:
      context: ./resource_service
    hostname: resource-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://resources:5432/resources
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
    command: ["java", "-jar", "/resource_service-1.0-SNAPSHOT.jar"]
    ports:
      - "8080:8080"
    networks:
      microservice-net:
        aliases:
          - resource-service
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_healthy
      localstack:
        condition: service_healthy
    restart: on-failure

  resource-processor:
    build:
      context: ./resource_processor
    hostname: resource-processor
    command: ["java", "-jar", "/resource_processor-1.0-SNAPSHOT.jar"]
    ports:
      - "8082:8082"
    networks:
       microservice-net:
        aliases:
          - resource_processor
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_healthy
      localstack:
        condition: service_healthy

networks:
  microservice-net:
    name: microservice-net
    driver: bridge
